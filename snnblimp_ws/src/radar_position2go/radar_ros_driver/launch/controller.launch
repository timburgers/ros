<!-- ############# TO DO [marina]: Think well to which topics subscribe exactly with OptiTrack !!!!! ########## -->

<!-- lauch file to record data from the radar, motor control and OptiTrack topic -->
<launch>

    <!-- ····················································································· -->
    <!-- ······················ CONSTANTS + PARAMETERS DEFINITION ···························· -->
    <!-- ····················································································· -->

    <!-- define local server [e.g. computer] and remote client(s) [e.g. Pi0, Pi4,...] machines -->
    <machine name="pi_client" timeout="20" address="mypi" user="pi" password="raspberry"  env-loader="/home/pi/Pi_Git/ros_radar_mine/catkin_ws/pi_ros_env.sh"/>
    <machine name="comp_server" address="mycomp"/>
   
    <!-- arguments to record -->
    <arg name="user"               default="marina"/>
    <arg name="record_targets"     default="false"/>
    <arg name="record_motor"       default="false"/>
    <arg name="record_optitrack"   default="false"/>
    <arg name="rigid_body"         default="blimp"/>
    <arg name="record_all"         default="true"/>
    <arg name="record_start_delay" default="12.0"/>
    <arg name="plotjuggler"        default="true"/>
    <arg name="plotjuggler_delay"  default="10.0"/>

    <!-- ····················································································· -->
    <!-- ································ NODES TO BE LAUNCHED ······························· -->
    <!-- ····················································································· -->

    <!-- radar driver  SHOULDN'T IT BE TYPE = DRIVER IN THIS CASE ¿¿¿¿¿¿¿¿?????????  ################################### -->
    <node machine="pi_client" pkg="radar_ros_driver" name="radar_ros_driver" type="radar_ros_driver" output="screen" if="$(arg record_all)"/>
    <node machine="pi_client" name="radar_ros_filter" pkg="radar_ros_driver" type="radar_ros_filter" output="screen" /> 
          <!-- launch-prefix="bash -c 'sleep $(arg record_start_delay); $0 $@' " if="$(arg record_all)"/> -->

    <!-- motor control -->
    <node machine="pi_client" pkg="motor_control" type="dcmotor" name="subscribe_to_speed" output="screen" launch-prefix="sudo -E" if="$(arg record_all)">
        <param name="cw_pwmPin"  value="19" />
        <param name="cw_dirPin"  value="26" />
        <param name="ccw_pwmPin" value="12" />
        <param name="ccw_dirPin" value="21" />
    </node>
    <node machine="pi_client" pkg="motor_control" type="servo_ros.py" name="subscribe_to_angle" output="screen" if="$(arg record_all)">
        <param name="servoPin" value="17" />
    </node>
    <node machine="pi_client" pkg="motor_control" type="controller.py" name="controller" output="screen" if="$(arg record_all)" />

    <!-- OptiTrack node -->
    <!-- include file="$(find mocap_optitrack)/launch/mocap_advanced.launch" if="$(arg record_all)"/-->

    <node machine="comp_server" pkg="rosbag" type="record" name="rosbag_record_all"
        args="record -o /home/$(arg user)/Pi_Git/ros_radar_mine/record_radar_data/all /h_ref /radar_filter /radar_targets /motor_control /$(arg rigid_body)/ground_pose /$(arg rigid_body)/pose"
        launch-prefix="bash -c 'sleep $(arg record_start_delay); $0 $@' "
        if="$(arg record_all)"/>

    <!-- ····················································································· -->
    <!-- ···························· REAL-TIME PLOTS (PLOTJUGGLER) ·························· -->
    <!-- ····················································································· -->

    <!-- plotjuggler: real-time plots -->
    <node machine="comp_server" name="plotjuggler" pkg="plotjuggler" type="plotjuggler" 
        args="--layout /home/$(arg user)/Pi_Git/ros_radar_mine/myLayout_playAll.xml"
        launch-prefix="bash -c 'sleep $(arg plotjuggler_delay); $0 $@' "
        if="$(arg plotjuggler)">
    </node>
</launch>